{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Like all good multimedia, websites follow the same rule that the content is more important than how it looks. High quality content with a bad design is unpleasant to experience, and an overdone design detracts from the content. Intercode is my attempt at creating a tool that takes the pros from both and combines them without the cons from either. While it is both a coding and design tool, ultimately it's purpose is to allow you to design a user's experience.\
\
I struggled with separating the visual design with the code aspect. I began writing instructions for computers with programming, which requires the writer to completely conceptualize what is going to happen in the code before running it, and then checking the writer's answer with the program's. I got too stuck in that way of writing, and so when I designed websites I would focus on either the elements and logic of the code, and then separately the visual rendered version of that site. My idea of the visual rendered version was the project's ideal, and the code version was the attempt that was always one step behind; it was always slightly less than my goal of what the project would be. The final touches would be made in the browser (so that I could see the changes immediately and interact with the webpage), and then I would attempt to copy the changes back over to the original document. Intercode attempts to bridge the gap and combine the features I wanted and used from both.\
\
Many content creators say that the first 80% of the project is 20% of the work. The rest, the refining and perfecting, is only 20% of the project while being 80% of the work. Intercode works for refinement, but it was created to be the tool to do that first 80% of the project as fast as possible, and then the final details can be added in a more specific tool.\
\
I like to create art that I can see while I make it. I grew up learning and practicing drawing, painting, handworking, wood working, sculpting, and music. Programming was always more of a conceptual thing for me (I like the process and challenge of creating an algorithm), so the visual fun in that was envisioning what the program would do. I began photographing, and while I prefer film images, I bought a digital camera because it's easier to see exactly what you are working with, and much faster to see and work with the final version of the photo. Web design required two different sides of the same project. One was the completely visual image I had of it, and then the other the translated code version.}